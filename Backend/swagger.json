{
    "openapi": "3.0.0",
    "info": {
      "title": "Swagger idk",
      "version": "1.0.0",
      "description": ""
    },
    "paths": {
      "/api/user/register": {
        "post": {
          "summary": "Register a new user",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": { "type": "string" },
                    "password": { "type": "string" },
                    "secPassword": { "type": "string" }
                  },
                  "required": ["username", "password", "secPassword"]
                }
              }
            },
            "responses": {
              "201": { "description": "User created" },
              "400": { "description": "Missing fields or password mismatch" },
              "409": { "description": "Username already taken" }
            }
          }
        }
      },
      "/api/user/login": {
        "post": {
          "summary": "Login a user",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": { "type": "string" },
                    "password": { "type": "string" }
                  },
                  "required": ["username", "password"]
                }
              }
            },
            "responses": {
              "200": { "description": "Login successful" },
              "400": { "description": "Missing fields" },
              "401": { "description": "Invalid credentials" }
            }
          }
        }
      },
      "/api/user/": {
        "get": {
          "summary": "Get current user",
          "security": [{ "bearerAuth": [] }],
          "responses": {
            "200": { "description": "User info" },
            "403": { "description": "Unauthorized" }
          }
        }
      },
      "/api/book/search/{title}": {
        "get": {
          "summary": "Search for books by title",
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "name": "title",
              "in": "path",
              "required": true,
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": { "description": "Books fetched successfully" },
            "400": { "description": "Missing title parameter" },
            "500": { "description": "Failed to fetch books" }
          }
        }
      },
      "/api/book/": {
        "post": {
          "summary": "Assign a book to a user",
          "security": [{ "bearerAuth": [] }],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "googleId": { "type": "string" }
                  },
                  "required": ["googleId"]
                }
              }
            }
          },
          "responses": {
            "201": { "description": "Book assigned" },
            "400": { "description": "Missing Google Book ID or book already assigned" },
            "401": { "description": "Missing user ID" },
            "404": { "description": "Book not found in Google Books" },
            "500": { "description": "Error assigning book" }
          }
        }
      },
      "/api/book/dashboard": {
        "get": {
          "summary": "Get all books assigned to user",
          "security": [{ "bearerAuth": [] }],
          "responses": {
            "200": { "description": "List of user books" },
            "500": { "description": "Error fetching user books" }
          }
        }
      },
      "/api/book/{bookId}": {
        "delete": {
          "summary": "Unassign (delete) a book from user",
          "security": [{ "bearerAuth": [] }],
          "parameters": [
            {
              "name": "bookId",
              "in": "path",
              "required": true,
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": { "description": "Book deleted" },
            "404": { "description": "Book does not exist" },
            "500": { "description": "Error deleting book" }
          }
        }
      }
    },
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }