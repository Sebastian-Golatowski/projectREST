{
  "openapi": "3.0.0",
  "info": {
    "title": "Book Note API",
    "version": "1.0.1",
    "description": "Endpoints for user registration, login, book management, and note handling."
  },
  "paths": {
    "/api/user/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "password", "secPassword"],
                "properties": {
                  "username": { "type": "string" },
                  "password": { "type": "string" },
                  "secPassword": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "User created" },
          "400": { "description": "Passwords don't match or don't meet requirements" },
          "409": { "description": "Username is already taken" }
        }
      }
    },
    "/api/user/login": {
      "post": {
        "summary": "Login a user",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "password"],
                "properties": {
                  "username": { "type": "string" },
                  "password": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Login successful" },
          "400": { "description": "Missing username or password" },
          "401": { "description": "Invalid credentials" }
        }
      }
    },
    "/api/user": {
      "get": {
        "summary": "Get current user info",
        "tags": ["User"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "User info" },
          "401": { "description": "Unauthorized or invalid token" }
        }
      }
    },
    "/api/book/search/{title}": {
      "get": {
        "summary": "Search for books by title",
        "tags": ["Books"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "title",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Books found (sorted by popularity)" },
          "400": { "description": "Missing title" },
          "500": { "description": "Failed to fetch books from Google" }
        }
      }
    },
    "/api/book": {
      "post": {
        "summary": "Assign a Google book to the user",
        "tags": ["Books"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["googleId"],
                "properties": {
                  "googleId": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Book assigned to user" },
          "400": { "description": "Missing or Wrong Google Book ID" },
          "401": { "description": "Missing user ID" },
          "404": { "description": "Book not found" },
          "409": { "description": "Book already added" }
        }
      }
    },
    "/api/book/dashboard": {
      "get": {
        "summary": "Get all books added by the user",
        "tags": ["Books"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "List of books (sorted by rating count)" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/book/{bookId}": {
      "delete": {
        "summary": "Remove a book from user's list",
        "tags": ["Books"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Book deleted" },
          "403": { "description": "User is not owner" },
          "404": { "description": "Book does not exist" },
          "500": { "description": "Failed to delete book" }
        }
      }
    },
    "/api/note": {
      "put": {
        "summary": "Edit a note for a book",
        "tags": ["Notes"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["body", "bookId"],
                "properties": {
                  "body": { "type": "string" },
                  "bookId": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Note updated successfully" },
          "400": { "description": "Missing note content or bookId" },
          "403": { "description": "User is not owner" },
          "404": { "description": "Note not found" },
          "401": { "description": "Missing user ID" }
        }
      }
    },
    "/api/note/{bookId}": {
      "get": {
        "summary": "Get a note for a specific book",
        "tags": ["Notes"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Note retrieved" },
          "400": { "description": "Missing bookId parameter" },
          "404": { "description": "Book or note not found" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [
    { "name": "User", "description": "User registration, login, and profile access" },
    { "name": "Books", "description": "Search, assign, and manage user book collection" },
    { "name": "Notes", "description": "Create and retrieve notes tied to userâ€™s books" }
  ]
}
