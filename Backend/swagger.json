{
  "openapi": "3.0.0",
  "info": {
    "title": "Book Note API",
    "version": "1.1.0",
    "description": "API for user registration, login, book management, and personal note handling."
  },
  "paths": {
    "/api/user/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "password", "secPassword"],
                "properties": {
                  "username": { "type": "string" },
                  "password": { "type": "string", "format": "password" },
                  "secPassword": { "type": "string", "format": "password" }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "User created successfully" },
          "400": { "description": "Missing fields or invalid password format" },
          "409": { "description": "Username is already taken" }
        }
      }
    },
    "/api/user/login": {
      "post": {
        "summary": "Login a user",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "password"],
                "properties": {
                  "username": { "type": "string" },
                  "password": { "type": "string", "format": "password" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Login successful" },
          "400": { "description": "Missing username or password" },
          "401": { "description": "Invalid username or password" }
        }
      }
    },
    "/api/user": {
      "get": {
        "summary": "Get current authenticated user",
        "tags": ["User"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "User info retrieved successfully" },
          "401": { "description": "Unauthenticated or invalid token" }
        }
      }
    },
    "/api/book/search/{title}": {
      "get": {
        "summary": "Search books by title",
        "tags": ["Books"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "title",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Books found and sorted by rating count" },
          "400": { "description": "Missing title parameter" },
          "500": { "description": "Failed to fetch books from Google Books" }
        }
      }
    },
    "/api/book": {
      "post": {
        "summary": "Add a Google Book to user's collection",
        "tags": ["Books"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["googleId"],
                "properties": {
                  "googleId": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Book assigned to user" },
          "400": { "description": "Missing Google Book ID" },
          "401": { "description": "Missing user ID or unauthenticated" },
          "404": { "description": "Book not found in Google Books" },
          "409": { "description": "Book already exists in user's collection" },
          "500": { "description": "Error with Google API" }
        }
      }
    },
    "/api/book/dashboard": {
      "get": {
        "summary": "Retrieve user's saved book collection",
        "tags": ["Books"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "List of user books sorted by popularity" },
          "401": { "description": "unauthenticated access" }
        }
      }
    },
    "/api/book/{bookId}": {
      "delete": {
        "summary": "Remove a book from user's collection",
        "tags": ["Books"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Book removed successfully" },
          "401": { "description": "Unauthenticated access" },
          "403": { "description": "User is not the owner of this book" },
          "404": { "description": "Book not found" },
          "500": { "description": "Internal error during deletion" }
        }
      }
    },
    "/api/note": {
      "put": {
        "summary": "Edit or update a note for a book",
        "tags": ["Notes"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["body", "bookId"],
                "properties": {
                  "body": { "type": "string" },
                  "bookId": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Note updated successfully" },
          "400": { "description": "Missing content or book ID" },
          "401": { "description": "USer unauthenticated" },
          "403": { "description": "User is not the note owner" },
          "404": { "description": "Note not found for the book" }
        }
      }
    },
    "/api/note/{bookId}": {
      "get": {
        "summary": "Get note associated with a specific book",
        "tags": ["Notes"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Note retrieved" },
          "400": { "description": "Missing bookId" },
          "404": { "description": "Note or book not found" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [
    {
      "name": "User",
      "description": "User registration, login, and profile info"
    },
    {
      "name": "Books",
      "description": "Search, add, remove, and view user's books"
    },
    {
      "name": "Notes",
      "description": "Write and retrieve notes linked to user's books"
    }
  ]
}
